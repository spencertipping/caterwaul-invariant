caterwaul.module( 'invariant' , (function(e) {var result= (function($) { (function() {var deglobalize=e.deglobalize,core_initializer=e.core_initializer,context=e.context,merge=e.merge,modules=e.modules,module=e.module,map=e.map,rmap=e.rmap,gensym=e.gensym,is_gensym=e.is_gensym,gensym_entropy=e.gensym_entropy,syntax_common=e.syntax_common,syntax_subclasses=e.syntax_subclasses,syntax_subclass=e.syntax_subclass,syntax_extend=e.syntax_extend,parse_hex=e.parse_hex,parse_octal=e.parse_octal,unescape_string=e.unescape_string,javascript_tree_type_methods=e.javascript_tree_type_methods,javascript_tree_metadata_methods=e.javascript_tree_metadata_methods,javascript_tree_serialization_methods=e.javascript_tree_serialization_methods,ref_common=e.ref_common,ref=e.ref,expression_ref=e.expression_ref,metadata_node=e.metadata_node,opaque_tree=e.opaque_tree,syntax=e.syntax,empty=e.empty,parse=e.parse,compile=e.compile,syntax_to_expression=e.syntax_to_expression,late_bound_tree=e.late_bound_tree,gensym_rename_table=e.gensym_rename_table,init=e.init,initializer=e.initializer,clone=e.clone,replicator=e.replicator,waul_initializer=e.waul_initializer,all=e.all,pattern=e.pattern,expander=e.expander,alternatives=e.alternatives,reexpander=e.reexpander,replacer=e.replacer,rereplacer=e.rereplacer,macroexpand=e.macroexpand,anonymizer=e.anonymizer,js=e.js,js_literals=e.js_literals,words=e.words,grammar=e.grammar,std_initializer=e.std_initializer,js_all=e.js_all,jquery=e.jquery,ui_initializer=e.ui_initializer,future_initializer=e.future_initializer,future=e.future;
return $.invariant= (function() {var node=function(behavior) {;
return(function() {var n=function() {;
return n.send.apply(n,arguments) } ,broadcast=caterwaul.future() ;
return $.merge(n, (function() {var to=function(b,p) {;
return(function(it) {return set_sibling(b,p) ,it} ) .call(this, ( (function(it) {return set_edge(b,p) ,it} ) .call(this, (n) ) ) ) } ,send=function(v,visited) {;
return(function() {var seen= (function(it) {return it[id] =n,it} ) .call(this, ( (visited|| {} ) ) ) ;
return(function(it) {return broadcast(v) ,it} ) .call(this, (behavior(n,v,seen) ) ) } ) .call(this) } ,unlink=function() {;
return(function(it) {return(function(xs) {var x,x0,xi,xl,xr;
for(var xi=0,xl=xs.length;
xi<xl;
 ++xi)x=xs[xi] , ( (x) .to(false,n) ) ;
return xs} ) .call(this,siblings) ,it} ) .call(this, (n) ) } ,signal=function() {;
return broadcast} ,set_edge=function(b,p) {;
return b? (siblings[p.id] =p,p.siblings[id] =n) : (delete siblings[p.id] ,delete p.siblings[id] ) } ,set_sibling=function(b,p) {;
return b?edges[p.id] =p.edges[id] =b: (delete edges[p.id] ,delete p.edges[id] ) } ,id=gensym() ,edges= {} ,siblings= {} ;
return{to:to,send:send,unlink:unlink,signal:signal,set_edge:set_edge,set_sibling:set_sibling,id:id,edges:edges,siblings:siblings} } ) .call(this) ) } ) .call(this) } ,node_repeat=function() {;
return function(n,v,seen) {;
return(function() {var siblings=n.siblings;
return(future( (function(xs) {var x,x0,xi,xl,xr;
for(var xr=new xs.constructor() ,xi=0,xl=xs.length;
xi<xl;
 ++xi)x=xs[xi] ,xr.push( (x[1] (v,seen,siblings[x[0] ] ) ) ) ;
return xr} ) .call(this, (function(o) {var ps= [] ;
for(var k in o)Object.prototype.hasOwnProperty.call(o,k) &&ps.push( [k,o[k] ] ) ;
return ps} ) .call(this, ( (function(xs) {var x,x0,xi,xl,xr;
var xr=new xs.constructor() ;
for(var x in xs)if(Object.prototype.hasOwnProperty.call(xs,x) && ! (seen[x] ) )xr[x] =xs[x] ;
return xr} ) .call(this,n.edges) ) ) ) ) ) .map(function(_) {return v} ) } ) .call(this) } } ,node_cache=function(eq) {;
return function(n,v,seen) {;
return!eq(v,n.val() ) } } ,filter_node=function(f) {;
return function(n) {;
return node( (function(v,seen) {return f(v) ?n(v,seen) :future() (v) } ) ) } } ,linear_edge=function(v,visited,n) {;
return n(v,visited) } ,silent_edge=function(v,visited,n) {;
return future() (v) } ,fail_edge=function(v,visited,n) {;
return future() (null) } ;
return{node:node,node_repeat:node_repeat,node_cache:node_cache,filter_node:filter_node,linear_edge:linear_edge,silent_edge:silent_edge,fail_edge:fail_edge} } ) .call(this) } ) .call(this) } ) ;
result.caterwaul_expression_ref_table= {e: ( "caterwaul" ) } ;
return(result) } ) .call(this,caterwaul) ) ;
